@page "/login"
@using System.Net.Http
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.WebAssembly.Http
@using System.Net.Http.Json
@using System.Net
@using BusinessLogic.Entities
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.WebAssembly.Http
@using static Microsoft.AspNetCore.Components.NavigationManager

<form>
    <div class="form-group">
        <label for="name">Email: </label>
        <input type="text" class="form-control" id="name" @bind="email">
    </div>
    <div class="form-group">
        <label for="area">Password:</label>
        <input type="text" class="form-control" id="area" @bind="password">
    </div>
    <button type="submit" class="btn btn-primary" @onclick="AbraLogIn">Add</button>
</form>

@inject NavigationManager NavigationManager
@inject RoleService RoleService
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

@code {
    private Abra[]? abra;
    bool feito = false;
    private string errorMessage;
    string email;
    string password;

    public partial class Abra
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = null!;
        public int Role { get; set; }
        public string Email { get; set; } = null!;
        public string Password { get; set; } = null!;
    }

    protected override async Task OnInitializedAsync()
    {
        abra = await httpClient.GetFromJsonAsync<Abra[]>("http://localhost:5052/api/Users");
    }

    private async Task AbraLogIn()
    {
        foreach (var user in abra)
        {
            if (user.Email == email && user.Password == password)
            {
                RoleService.Role = user.Role; // Set the role in the RoleService
                NavigationManager.NavigateTo("/");
                return;
            }
        }

    // Handle the case when email and password don't match or user is not found
        errorMessage = "Invalid email or password.";
        await JSRuntime.InvokeVoidAsync("console.log", email);
        await JSRuntime.InvokeVoidAsync("console.log", password);
    }
}